name: Frontend CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci --legacy-peer-deps
      - run: npm run lint
      - run: npm run typecheck
      - run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci --legacy-peer-deps
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist
      - uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          tags: frontend:latest
          push: false

  e2e:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Build and start stack via Docker Compose
        run: docker compose up --build -d
      - name: Wait for frontend to be ready
        run: |
          for i in {1..20}; do
            if curl --fail http://localhost:8080/; then
              echo "Frontend is up!"; break;
            fi
            echo "Waiting for frontend..."; sleep 3;
          done
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run E2E tests
        run: npx playwright test tests/e2e
      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
